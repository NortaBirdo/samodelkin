unit ClientsFormUnit;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Grids, Vcl.DBGrids, Vcl.StdCtrls,
  Vcl.DBCtrls, Vcl.ToolWin, Vcl.ComCtrls, Vcl.ExtCtrls;

type
  TClientsForm = class(TForm)
    DBGrid1: TDBGrid;
    Label1: TLabel;
    DBMemo1: TDBMemo;
    ControlBar1: TControlBar;
    ToolBar1: TToolBar;
    ToolBtnAdd: TToolButton;
    ToolBtnSave: TToolButton;
    ToolBtnArch: TToolButton;
    ToolButton4: TToolButton;
    ToolBtnBlackList: TToolButton;
    ComboBox1: TComboBox;
    Label2: TLabel;
    Label4: TLabel;
    DBGrid2: TDBGrid;
    Label3: TLabel;
    BalLabel: TLabel;
    ToolButton1: TToolButton;
    AddMoneyToolBtn: TToolButton;
    procedure ComboBox1Change(Sender: TObject);
    procedure ToolBtnAddClick(Sender: TObject);
    procedure ToolBtnSaveClick(Sender: TObject);
    procedure ToolBtnArchClick(Sender: TObject);
    procedure ToolBtnBlackListClick(Sender: TObject);
    procedure DBGrid1CellClick(Column: TColumn);
    procedure FormShow(Sender: TObject);
    procedure AddMoneyToolBtnClick(Sender: TObject);

  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  ClientsForm: TClientsForm;

implementation

{$R *.dfm}

uses DataModuleMySQLUnit, OperationFormUnit, ClientModelUnit;

//зачислить на счет
procedure TClientsForm.AddMoneyToolBtnClick(Sender: TObject);
begin
  OperationForm.LabelType.caption := 'клиент';
  OperationForm.LabelName.Caption := DataModuleMySQL.ADQueryClients.FieldByName('fio').AsString;
  OperationForm.SetDataSet(DataModuleMySQL.DataSourceClientAccount);
  OperationForm.notes := 'Зачисление аванса';
  OperationForm.ShowModal;
end;

procedure TClientsForm.ComboBox1Change(Sender: TObject);
begin
case ComboBox1.ItemIndex of
0: begin
   ToolBtnArch.Caption := 'Архивировать';
   ToolBtnBlackList.Caption := 'В черный список';
   ClientModel.ShowActiveClient;
   end;
1: begin
   ToolBtnArch.Caption := 'Активировать';
   ToolBtnBlackList.Caption := 'В черный список';
   ClientModel.ShowArchiveClient;
   end;
2: begin
   ToolBtnArch.Caption := 'Архивировать';
   ToolBtnBlackList.Caption := 'Удалить из черного списка';
   ClientModel.ShowBlackListClient;
   end;
end;
end;

//управление архивом
procedure TClientsForm.ToolBtnArchClick(Sender: TObject);
begin
if ToolBtnArch.Caption = 'Архивировать' then
  ClientModel.SetClientFlag(1)
  else
  ClientModel.SetClientFlag(0);

ClientModel.ADQueryClients.Post;
ClientModel.RefreshClient;
end;

//управление черным списком
procedure TClientsForm.ToolBtnBlackListClick(Sender: TObject);
begin
if ToolBtnBlackList.Caption = 'В черный список' then
  ClientModel.SetClientFlag(2)
  else
  ClientModel.SetClientFlag(0);

ClientModel.ADQueryClients.Post;
ClientModel.RefreshClient;
end;

//Обновление баланса
procedure TClientsForm.DBGrid1CellClick(Column: TColumn);
begin
  DataModuleMySQL.FirstStart := false;
  ClientsForm.BalLabel.Caption := IntToStr(ClientModel.BalanceClient);
end;

procedure TClientsForm.FormShow(Sender: TObject);
begin
  DataModuleMySQL.FirstStart := false;
  ClientsForm.BalLabel.Caption := IntToStr(ClientModel.BalanceClient);
end;

//добавление нового клиента
procedure TClientsForm.ToolBtnAddClick(Sender: TObject);
begin
 ClientModel.ADQueryClients.Insert;
 ClientModel.SetClientFlag(0);
end;

//сохранение клиента
procedure TClientsForm.ToolBtnSaveClick(Sender: TObject);
begin
  if ClientModel.ADQueryClients.Modified then
    ClientModel.ADQueryClients.Post;
  ClientModel.RefreshClientList;
end;

end.
