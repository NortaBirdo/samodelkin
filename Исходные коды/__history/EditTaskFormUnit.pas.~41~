unit EditTaskFormUnit;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Mask, Vcl.DBCtrls,
  Vcl.Grids, Vcl.DBGrids, Vcl.ComCtrls;

type
  TEditTaskForm = class(TForm)
    Label1: TLabel;
    Label2: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    DBMemo1: TDBMemo;
    DBText1: TDBText;
    DBEdit2: TDBEdit;
    DBEdit3: TDBEdit;
    Label6: TLabel;
    DBComboBox1: TDBComboBox;
    DBGrid1: TDBGrid;
    LabelChange: TLabel;
    BtnChangeFreelancer: TButton;
    BtnOk: TButton;
    BtnCancel: TButton;
    Label3: TLabel;
    MonthCalendar1: TMonthCalendar;
    NullDeadlineBtn: TButton;
    DBText2: TDBText;
    procedure BtnOkClick(Sender: TObject);
    procedure BtnChangeFreelancerClick(Sender: TObject);
    procedure BtnCancelClick(Sender: TObject);
    procedure MonthCalendar1Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure NullDeadlineBtnClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  EditTaskForm: TEditTaskForm;

implementation

{$R *.dfm}

uses DataModuleMySQLUnit, TaskModelUnit, ProjectModelUnit, FreelancerModelUnit;

procedure TEditTaskForm.BtnCancelClick(Sender: TObject);
begin
 DataModuleMySQL.ADQueryTask.Cancel;
 EditTaskForm.Close;
end;

procedure TEditTaskForm.BtnChangeFreelancerClick(Sender: TObject);
begin
LabelChange.Caption := 'Новый исполнитель: ' + DataModuleMySQL.GetNameFreelancer;
DataModuleMySQL.SetFreelancerLink(DataModuleMySQL.GetIdFreelancer);
end;

procedure TEditTaskForm.BtnOkClick(Sender: TObject);
begin
if DataModuleMySQL.ADQueryTask.Modified then
begin
  with DataModuleMySQL do
  begin
    try
      ADQueryTask.Post;
    except
      ShowMessage('Не заполнено одно из обязательных полей (название, статус или исполнитель). Заполните и повторите попытку.');
      exit;
    end;

    //калькуляция бюджета проекта
    ProjectModel.CalcProjectBudget(ProjectModel.GetIDProject);
    ProjectModel.CalcProjectBalance(ProjectModel.GetIDProject);
    CalcTaskBalance;
    RefreshTask;
    ProjectModel.RefreshProject;
  end;
end;
EditTaskForm.Close;
end;

procedure TEditTaskForm.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  BtnCancelClick(sender);
end;

procedure TEditTaskForm.FormShow(Sender: TObject);
begin
  LabelChange.Caption := 'Новый исполнитель: ';
  MonthCalendar1.Date := now;
end;

procedure TEditTaskForm.MonthCalendar1Click(Sender: TObject);
begin
  DataModuleMySQL.SetDeadline(MonthCalendar1.Date);
end;

//Обнулить deadline
procedure TEditTaskForm.NullDeadlineBtnClick(Sender: TObject);
var
  MyTask: TTaskModel;
begin
  MyTask := TTaskModel.Create(DataModuleMySQL.ADConnection1);
  MyTask.SetDeadlineNull(DataModuleMySQL.ADQueryTask.FieldByName('id').AsInteger);
  MyTask.Free;

  DataModuleMySQL.RefreshTask;
end;

end.
